definitions:
  res.GetPublicKeyResponse:
    properties:
      key:
        type: string
    type: object
  services.Hello:
    properties:
      message:
        type: string
      name:
        type: string
    type: object
  services.User:
    properties:
      avatar_url:
        type: string
      email:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/hello:
    get:
      consumes:
      - application/json
      description: get hello
      parameters:
      - description: name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.Hello'
      summary: get hello
      tags:
      - hello-hutao
  /api/v1/user/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: user info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/services.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.Hello'
      summary: user register
      tags:
      - user
  /public_key:
    get:
      consumes:
      - application/json
      description: get public key from server, use this to encryption
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.GetPublicKeyResponse'
      summary: get public key
      tags:
      - hello-hutao
swagger: "2.0"
